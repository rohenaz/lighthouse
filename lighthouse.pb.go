// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: lighthouse.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Project represents a crowdfunding campaign
type Project struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of the project format
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Project details
	Details *ProjectDetails `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	// Extra metadata not in original BIP70
	Extra *ProjectExtraDetails `protobuf:"bytes,3,opt,name=extra,proto3" json:"extra,omitempty"`
	// Signature over the project (future use)
	Signature     []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_lighthouse_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_lighthouse_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_lighthouse_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Project) GetDetails() *ProjectDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Project) GetExtra() *ProjectExtraDetails {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *Project) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// ProjectDetails follows BIP70 PaymentRequest structure
type ProjectDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network (mainnet/testnet)
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// Outputs that define where funds go
	Outputs []*Output `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// Unix timestamp when project was created
	Time *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	// Optional expiration time
	Expires *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires,proto3" json:"expires,omitempty"`
	// Human-readable description
	Memo string `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	// URL for project updates (optional)
	PaymentUrl string `protobuf:"bytes,6,opt,name=payment_url,json=paymentUrl,proto3" json:"payment_url,omitempty"`
	// Arbitrary data for the merchant
	MerchantData  []byte `protobuf:"bytes,7,opt,name=merchant_data,json=merchantData,proto3" json:"merchant_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectDetails) Reset() {
	*x = ProjectDetails{}
	mi := &file_lighthouse_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDetails) ProtoMessage() {}

func (x *ProjectDetails) ProtoReflect() protoreflect.Message {
	mi := &file_lighthouse_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDetails.ProtoReflect.Descriptor instead.
func (*ProjectDetails) Descriptor() ([]byte, []int) {
	return file_lighthouse_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectDetails) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ProjectDetails) GetOutputs() []*Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *ProjectDetails) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *ProjectDetails) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

func (x *ProjectDetails) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *ProjectDetails) GetPaymentUrl() string {
	if x != nil {
		return x.PaymentUrl
	}
	return ""
}

func (x *ProjectDetails) GetMerchantData() []byte {
	if x != nil {
		return x.MerchantData
	}
	return nil
}

// Extended details beyond BIP70
type ProjectExtraDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Short title for the project
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Cover image bytes (JPEG/PNG)
	CoverImage []byte `protobuf:"bytes,2,opt,name=cover_image,json=coverImage,proto3" json:"cover_image,omitempty"`
	// Auth key for project ownership proof
	AuthKey []byte `protobuf:"bytes,3,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	// Minimum pledge amount in satoshis
	MinPledgeAmount uint64 `protobuf:"varint,4,opt,name=min_pledge_amount,json=minPledgeAmount,proto3" json:"min_pledge_amount,omitempty"`
	// Project category/tags
	Tags          []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectExtraDetails) Reset() {
	*x = ProjectExtraDetails{}
	mi := &file_lighthouse_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectExtraDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectExtraDetails) ProtoMessage() {}

func (x *ProjectExtraDetails) ProtoReflect() protoreflect.Message {
	mi := &file_lighthouse_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectExtraDetails.ProtoReflect.Descriptor instead.
func (*ProjectExtraDetails) Descriptor() ([]byte, []int) {
	return file_lighthouse_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectExtraDetails) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProjectExtraDetails) GetCoverImage() []byte {
	if x != nil {
		return x.CoverImage
	}
	return nil
}

func (x *ProjectExtraDetails) GetAuthKey() []byte {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

func (x *ProjectExtraDetails) GetMinPledgeAmount() uint64 {
	if x != nil {
		return x.MinPledgeAmount
	}
	return 0
}

func (x *ProjectExtraDetails) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Output represents a transaction output
type Output struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Amount in satoshis
	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// Locking script
	Script        []byte `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Output) Reset() {
	*x = Output{}
	mi := &file_lighthouse_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_lighthouse_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_lighthouse_proto_rawDescGZIP(), []int{3}
}

func (x *Output) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Output) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

// Pledge represents a contribution to a project
type Pledge struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID this pledge is for
	ProjectId []byte `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Transaction inputs signed with SIGHASH_ANYONECANPAY
	Inputs []*Input `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// Contact info (optional)
	Contact *ContactInfo `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
	// Message from pledger
	Memo string `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	// Unix timestamp
	Time *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	// Refund address if project fails
	RefundAddress string `protobuf:"bytes,6,opt,name=refund_address,json=refundAddress,proto3" json:"refund_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pledge) Reset() {
	*x = Pledge{}
	mi := &file_lighthouse_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pledge) ProtoMessage() {}

func (x *Pledge) ProtoReflect() protoreflect.Message {
	mi := &file_lighthouse_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pledge.ProtoReflect.Descriptor instead.
func (*Pledge) Descriptor() ([]byte, []int) {
	return file_lighthouse_proto_rawDescGZIP(), []int{4}
}

func (x *Pledge) GetProjectId() []byte {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *Pledge) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Pledge) GetContact() *ContactInfo {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *Pledge) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Pledge) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Pledge) GetRefundAddress() string {
	if x != nil {
		return x.RefundAddress
	}
	return ""
}

// Input for a pledge transaction
type Input struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Previous transaction hash
	TxHash []byte `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	// Output index
	OutputIndex uint32 `protobuf:"varint,2,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"`
	// Unlocking script with SIGHASH_ANYONECANPAY signature
	UnlockScript []byte `protobuf:"bytes,3,opt,name=unlock_script,json=unlockScript,proto3" json:"unlock_script,omitempty"`
	// Sequence number
	Sequence      uint32 `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Input) Reset() {
	*x = Input{}
	mi := &file_lighthouse_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_lighthouse_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_lighthouse_proto_rawDescGZIP(), []int{5}
}

func (x *Input) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Input) GetOutputIndex() uint32 {
	if x != nil {
		return x.OutputIndex
	}
	return 0
}

func (x *Input) GetUnlockScript() []byte {
	if x != nil {
		return x.UnlockScript
	}
	return nil
}

func (x *Input) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// Contact information for pledger
type ContactInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name (optional)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Email (optional)
	Email         string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContactInfo) Reset() {
	*x = ContactInfo{}
	mi := &file_lighthouse_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContactInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactInfo) ProtoMessage() {}

func (x *ContactInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lighthouse_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactInfo.ProtoReflect.Descriptor instead.
func (*ContactInfo) Descriptor() ([]byte, []int) {
	return file_lighthouse_proto_rawDescGZIP(), []int{6}
}

func (x *ContactInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContactInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// ProjectStatus for server responses
type ProjectStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project being tracked
	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// All pledges received
	Pledges []*Pledge `protobuf:"bytes,2,rep,name=pledges,proto3" json:"pledges,omitempty"`
	// Total amount pledged
	TotalPledged uint64 `protobuf:"varint,3,opt,name=total_pledged,json=totalPledged,proto3" json:"total_pledged,omitempty"`
	// Whether project has been claimed
	Claimed bool `protobuf:"varint,4,opt,name=claimed,proto3" json:"claimed,omitempty"`
	// Transaction ID if claimed
	ClaimTx       []byte `protobuf:"bytes,5,opt,name=claim_tx,json=claimTx,proto3" json:"claim_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectStatus) Reset() {
	*x = ProjectStatus{}
	mi := &file_lighthouse_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectStatus) ProtoMessage() {}

func (x *ProjectStatus) ProtoReflect() protoreflect.Message {
	mi := &file_lighthouse_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectStatus.ProtoReflect.Descriptor instead.
func (*ProjectStatus) Descriptor() ([]byte, []int) {
	return file_lighthouse_proto_rawDescGZIP(), []int{7}
}

func (x *ProjectStatus) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *ProjectStatus) GetPledges() []*Pledge {
	if x != nil {
		return x.Pledges
	}
	return nil
}

func (x *ProjectStatus) GetTotalPledged() uint64 {
	if x != nil {
		return x.TotalPledged
	}
	return 0
}

func (x *ProjectStatus) GetClaimed() bool {
	if x != nil {
		return x.Claimed
	}
	return false
}

func (x *ProjectStatus) GetClaimTx() []byte {
	if x != nil {
		return x.ClaimTx
	}
	return nil
}

var File_lighthouse_proto protoreflect.FileDescriptor

const file_lighthouse_proto_rawDesc = "" +
	"\n" +
	"\x10lighthouse.proto\x12\n" +
	"lighthouse\x1a\x1fgoogle/protobuf/timestamp.proto\"\xae\x01\n" +
	"\aProject\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x124\n" +
	"\adetails\x18\x02 \x01(\v2\x1a.lighthouse.ProjectDetailsR\adetails\x125\n" +
	"\x05extra\x18\x03 \x01(\v2\x1f.lighthouse.ProjectExtraDetailsR\x05extra\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\"\x98\x02\n" +
	"\x0eProjectDetails\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12,\n" +
	"\aoutputs\x18\x02 \x03(\v2\x12.lighthouse.OutputR\aoutputs\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x124\n" +
	"\aexpires\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\x12\x12\n" +
	"\x04memo\x18\x05 \x01(\tR\x04memo\x12\x1f\n" +
	"\vpayment_url\x18\x06 \x01(\tR\n" +
	"paymentUrl\x12#\n" +
	"\rmerchant_data\x18\a \x01(\fR\fmerchantData\"\xa7\x01\n" +
	"\x13ProjectExtraDetails\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x1f\n" +
	"\vcover_image\x18\x02 \x01(\fR\n" +
	"coverImage\x12\x19\n" +
	"\bauth_key\x18\x03 \x01(\fR\aauthKey\x12*\n" +
	"\x11min_pledge_amount\x18\x04 \x01(\x04R\x0fminPledgeAmount\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\"8\n" +
	"\x06Output\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x04R\x06amount\x12\x16\n" +
	"\x06script\x18\x02 \x01(\fR\x06script\"\xf0\x01\n" +
	"\x06Pledge\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\fR\tprojectId\x12)\n" +
	"\x06inputs\x18\x02 \x03(\v2\x11.lighthouse.InputR\x06inputs\x121\n" +
	"\acontact\x18\x03 \x01(\v2\x17.lighthouse.ContactInfoR\acontact\x12\x12\n" +
	"\x04memo\x18\x04 \x01(\tR\x04memo\x12.\n" +
	"\x04time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12%\n" +
	"\x0erefund_address\x18\x06 \x01(\tR\rrefundAddress\"\x84\x01\n" +
	"\x05Input\x12\x17\n" +
	"\atx_hash\x18\x01 \x01(\fR\x06txHash\x12!\n" +
	"\foutput_index\x18\x02 \x01(\rR\voutputIndex\x12#\n" +
	"\runlock_script\x18\x03 \x01(\fR\funlockScript\x12\x1a\n" +
	"\bsequence\x18\x04 \x01(\rR\bsequence\"7\n" +
	"\vContactInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\"\xc6\x01\n" +
	"\rProjectStatus\x12-\n" +
	"\aproject\x18\x01 \x01(\v2\x13.lighthouse.ProjectR\aproject\x12,\n" +
	"\apledges\x18\x02 \x03(\v2\x12.lighthouse.PledgeR\apledges\x12#\n" +
	"\rtotal_pledged\x18\x03 \x01(\x04R\ftotalPledged\x12\x18\n" +
	"\aclaimed\x18\x04 \x01(\bR\aclaimed\x12\x19\n" +
	"\bclaim_tx\x18\x05 \x01(\fR\aclaimTxB\x0eZ\f./core/protob\x06proto3"

var (
	file_lighthouse_proto_rawDescOnce sync.Once
	file_lighthouse_proto_rawDescData []byte
)

func file_lighthouse_proto_rawDescGZIP() []byte {
	file_lighthouse_proto_rawDescOnce.Do(func() {
		file_lighthouse_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lighthouse_proto_rawDesc), len(file_lighthouse_proto_rawDesc)))
	})
	return file_lighthouse_proto_rawDescData
}

var file_lighthouse_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_lighthouse_proto_goTypes = []any{
	(*Project)(nil),               // 0: lighthouse.Project
	(*ProjectDetails)(nil),        // 1: lighthouse.ProjectDetails
	(*ProjectExtraDetails)(nil),   // 2: lighthouse.ProjectExtraDetails
	(*Output)(nil),                // 3: lighthouse.Output
	(*Pledge)(nil),                // 4: lighthouse.Pledge
	(*Input)(nil),                 // 5: lighthouse.Input
	(*ContactInfo)(nil),           // 6: lighthouse.ContactInfo
	(*ProjectStatus)(nil),         // 7: lighthouse.ProjectStatus
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_lighthouse_proto_depIdxs = []int32{
	1,  // 0: lighthouse.Project.details:type_name -> lighthouse.ProjectDetails
	2,  // 1: lighthouse.Project.extra:type_name -> lighthouse.ProjectExtraDetails
	3,  // 2: lighthouse.ProjectDetails.outputs:type_name -> lighthouse.Output
	8,  // 3: lighthouse.ProjectDetails.time:type_name -> google.protobuf.Timestamp
	8,  // 4: lighthouse.ProjectDetails.expires:type_name -> google.protobuf.Timestamp
	5,  // 5: lighthouse.Pledge.inputs:type_name -> lighthouse.Input
	6,  // 6: lighthouse.Pledge.contact:type_name -> lighthouse.ContactInfo
	8,  // 7: lighthouse.Pledge.time:type_name -> google.protobuf.Timestamp
	0,  // 8: lighthouse.ProjectStatus.project:type_name -> lighthouse.Project
	4,  // 9: lighthouse.ProjectStatus.pledges:type_name -> lighthouse.Pledge
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_lighthouse_proto_init() }
func file_lighthouse_proto_init() {
	if File_lighthouse_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lighthouse_proto_rawDesc), len(file_lighthouse_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lighthouse_proto_goTypes,
		DependencyIndexes: file_lighthouse_proto_depIdxs,
		MessageInfos:      file_lighthouse_proto_msgTypes,
	}.Build()
	File_lighthouse_proto = out.File
	file_lighthouse_proto_goTypes = nil
	file_lighthouse_proto_depIdxs = nil
}
